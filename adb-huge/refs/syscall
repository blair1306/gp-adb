<dec f='codebrowser/prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.15-4.8/sysroot/usr/include/unistd.h' l='1082' type='long syscall(long __sysno)'/>
<doc f='codebrowser/prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.15-4.8/sysroot/usr/include/unistd.h' l='1072'>/* Invoke `system call&apos; number SYSNO, passing it the remaining arguments.
   This is completely system-dependent, and not often useful.

   In Unix, `syscall&apos; sets `errno&apos; for all errors and most calls return -1
   for errors; in many systems you cannot pass arguments or get return
   values for all system calls (`pipe&apos;, `fork&apos;, and `getppid&apos; typically
   among them).

   In Mach, all system calls take normal arguments and always return an
   error code (zero for success).  */</doc>
<use f='codebrowser/system/core/base/logging.cpp' l='83' u='c' c='_ZL11GetThreadIdv'/>
<use f='codebrowser/system/core/libcutils/threads.c' l='40' u='c' c='gettid'/>
